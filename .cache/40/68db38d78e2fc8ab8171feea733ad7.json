{"id":"mqk9","dependencies":[{"name":"/Users/fabien/Documents/OpenClassRoom/Projet-12/sportsee/package.json","includedInParent":true,"mtime":1616760545557},{"name":"/Users/fabien/Documents/OpenClassRoom/Projet-12/sportsee/node_modules/lodash/package.json","includedInParent":true,"mtime":499162500000},{"name":"./_baseIteratee","loc":{"line":1,"column":27},"parent":"/Users/fabien/Documents/OpenClassRoom/Projet-12/sportsee/node_modules/lodash/sumBy.js","resolved":"/Users/fabien/Documents/OpenClassRoom/Projet-12/sportsee/node_modules/lodash/_baseIteratee.js"},{"name":"./_baseSum","loc":{"line":2,"column":22},"parent":"/Users/fabien/Documents/OpenClassRoom/Projet-12/sportsee/node_modules/lodash/sumBy.js","resolved":"/Users/fabien/Documents/OpenClassRoom/Projet-12/sportsee/node_modules/lodash/_baseSum.js"}],"generated":{"js":"var e=require(\"./_baseIteratee\"),r=require(\"./_baseSum\");function t(t,u){return t&&t.length?r(t,e(u,2)):0}module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/sumBy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":2,"column":0},"generated":{"line":1,"column":33}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":2,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":2,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":27,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":27,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":27,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":27,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":28,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":28,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":28,"column":0},"generated":{"line":1,"column":83}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":28,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":29,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":29,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":29,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":29,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":29,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":30,"column":0},"generated":{"line":1,"column":104}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":33,"column":0},"generated":{"line":1,"column":106}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":33,"column":0},"generated":{"line":1,"column":113}},{"source":"../node_modules/lodash/sumBy.js","original":{"line":33,"column":0},"generated":{"line":1,"column":121}}],"sources":{"../node_modules/lodash/sumBy.js":"var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n"},"lineCount":null}},"error":null,"hash":"8ff4b208f3ec94239026f58d92dedee4","cacheData":{"env":{}}}